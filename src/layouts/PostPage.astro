---
import type { CollectionEntry } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import FormattedDate from '@/components/FormattedDate.astro'
import Divider from '@/components/Divider.astro'
import { SITE_DESCRIPTION } from '@/consts'
import TablerPencil from '~icons/tabler/pencil'
import { getCollection } from 'astro:content'
import PostCard from '@/components/PostCard.astro'

interface Props {
  isShowDate?: boolean
  data: {
    updatedDate?: Date | undefined
    heroImage?: string | undefined
    title: string
    description?: string
    date?: Date
    draft?: boolean
  }
  slug: CollectionEntry<'blog'>['slug'] | string
  isBlogPost?: boolean
}

const {
  isShowDate = true,
  data: { title, description, date, updatedDate, heroImage, draft },
  slug,
  isBlogPost = false,
} = Astro.props

let image = heroImage

if (image === undefined) {
  image = `/image/${slug}.png`
}

const posts = (await getCollection('blog')).sort(
  (a, b) => a.data.date.valueOf() - b.data.date.valueOf(),
)
---

<BaseLayout
  title={title}
  description={description || SITE_DESCRIPTION}
  image={image}
  slug={slug}
>
  <article class:list={[{ isBlogPost }]}>
    <div class="pageInfo flex flex-col gap-3">
      {heroImage && <img src={heroImage} alt="Hero image" />}
      <!-- {image && <img src={image} alt="Hero image" />} -->
      <h1 class="mb-0">{title}</h1>
      {description && <p class="opacity-70 m-0">{description}</p>}

      {
        !draft && isShowDate && (date || updatedDate) && (
          <div class="flex flex-row flex-wrap gap-x-3 gap-y-0.3 opacity-70">
            {!draft && isShowDate && date && <FormattedDate date={date} />}
            {!draft && updatedDate && (
              <FormattedDate date={updatedDate} isUpdatedDate={true} />
            )}
          </div>
        )
      }
      {
        draft && (
          <p class="m-0 inline-flex items-center gap-1 text-lg">
            <TablerPencil class="w-1em h-1em" />
            Черновик
          </p>
        )
      }
      <Divider article={false} />
    </div>
    <div class="articleContent">
      <slot />
    </div>
  </article>
  {
    isBlogPost && (
      <div>
        <div class="mt-20 mb-12 my-2">
          <Divider article={false} />
        </div>
        <section>
          <p class="text-xl">Вам также может понравиться:</p>
          <div class="my-4 p-0 grid grid-cols-1 md:grid-cols-3 gap-4">
            {posts
              .slice()
              .filter((post) => !post.data.draft)
              .reverse()
              .slice(0, 6)
              .map((post) => (
                <PostCard post={post} />
              ))}
          </div>
        </section>
      </div>
    )
  }
</BaseLayout>
